diff --git a/discord-clone/.gitignore b/discord-clone/.gitignore
index 9ce43e0..912d6c5 100644
--- a/discord-clone/.gitignore
+++ b/discord-clone/.gitignore
@@ -1,6 +1,7 @@
 # See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
 
 # dependencies
+community-chat
 /node_modules
 /.pnp
 .pnp.js
diff --git a/discord-clone/app/api/socket/messages/route.ts b/discord-clone/app/api/socket/messages/route.ts
index d9ce4f2..19196e3 100644
--- a/discord-clone/app/api/socket/messages/route.ts
+++ b/discord-clone/app/api/socket/messages/route.ts
@@ -16,6 +16,8 @@ export async function POST(req:Request,res:NextResponse){
         const { content,fileUrl, serverId, channelId } = body
 
         console.log(`serverid and chanels id are ${serverId} ${channelId}`)
+        console.log(`content and fileUrl  are ${content} ${fileUrl}`)
+
  
         if(!content){
             return new NextResponse("Content is missing")
@@ -171,4 +173,4 @@ export async function GET(req:Request){
     catch(err){
         console.log("[SOCKET MESSAGES GET ERROR]")
     }
-}
\ No newline at end of file
+}
diff --git a/discord-clone/components/chat/chat-input.tsx b/discord-clone/components/chat/chat-input.tsx
index fac1a3d..bbcfec1 100644
--- a/discord-clone/components/chat/chat-input.tsx
+++ b/discord-clone/components/chat/chat-input.tsx
@@ -7,6 +7,7 @@ import { Input } from '../ui/input'
 import { Plus } from 'lucide-react'
 import axios from "axios"
 import  qs from 'query-string'
+import { useModal } from '@/hooks/use-modal-store'
 interface ChatInputProps {
     apiUrl: string,
     query: Record<string, any>,
@@ -31,6 +32,7 @@ export function ChatInput({
         }
 
     })
+    const {onOpen}=useModal()
     const isLoading = form.formState.isLoading
     const onSubmit = async (value: z.infer<typeof formSchema>) => {
         try{
@@ -59,7 +61,8 @@ export function ChatInput({
                                     <button
                                         type="button"
                                         className="absolute top-7 left-8 h-[24px] w-[24px] bg-zinc-500 dark:bg-zinc-400 hover:bg-zinc-600  dark:hover:bg-zinc-300 rounded-full transition flex items-center justify-center p-1"
-                                    >
+                                        onClick={()=>onOpen('fileMessage',{apiUrl,query})}
+                                     >
                                         <Plus className=" text-white h-4 w-4" />
                                         </button>
 
diff --git a/discord-clone/hooks/use-modal-store.ts b/discord-clone/hooks/use-modal-store.ts
index f97e925..aac0452 100644
--- a/discord-clone/hooks/use-modal-store.ts
+++ b/discord-clone/hooks/use-modal-store.ts
@@ -1,9 +1,14 @@
-import { Channel, Server } from "@prisma/client";
+import { Channel, ChannelType, Server } from "@prisma/client";
 import {create } from "zustand"
-export type ModalType="createServer" | "invite" |"editServer" |"members" |"createChannel" |"leaveServer" |"deleteServer" |"search" |"editChannel"
+export type ModalType="createServer" | "invite" |"editServer" |"members" |"createChannel" |"leaveServer" |"deleteServer" |"search" |"editChannel" | "fileMessage"
 interface ModalData{
     server?:Server,
-    channel?:Channel
+    channel?:Channel,
+    channelType?:ChannelType,
+    apiUrl?:string,
+    query?:Record<string,string>
+    
+
 }
 interface ModalStore {
     type:ModalType | null,
@@ -18,6 +23,8 @@ export const useModal=create<ModalStore>((set)=>({
     type:null,
     isOpen:false,
     data:{},
-    onOpen:(type,data={})=>set({isOpen:true ,type,data}),
+    onOpen:(type,data={})=>{
+        console.log(`Opening modal ${type}  with data:, ${data}`);
+        set({isOpen:true ,type,data})},
     onClose:()=>set({type:null,isOpen:false})
-})) 
\ No newline at end of file
+})) 
diff --git a/discord-clone/providers/modal-provider.tsx b/discord-clone/providers/modal-provider.tsx
index b113435..4a54091 100644
--- a/discord-clone/providers/modal-provider.tsx
+++ b/discord-clone/providers/modal-provider.tsx
@@ -1,13 +1,16 @@
+
 "use client"
 import CreateChannelModal from "@/components/modals/create-channel-modal"
 import CreateServerModal from "@/components/modals/create-server-modal"
 import DeleteServerModal from "@/components/modals/delete-server-modal"
 import EditChannelModal from "@/components/modals/edit-channel-modal"
 import EditServerModal from "@/components/modals/edit-server-modal"
+import FileChatUploadMoad from "@/components/modals/file-chat-upload-modal"
 import InviteServerModal from "@/components/modals/invite-modal"
 import LeaveServerModal from "@/components/modals/leave-server"
 import ManageMembersModal from "@/components/modals/manage-members-modal"
 import { useState,useEffect } from "react"
+
 export const    ModalProvider=()=>{
     
     return(
@@ -20,7 +23,8 @@ export const    ModalProvider=()=>{
         <CreateChannelModal />
         <LeaveServerModal />
         <DeleteServerModal />
+        <FileChatUploadMoad/>
         
         </>
     )
-}
\ No newline at end of file
+}
diff --git a/package-lock.json b/package-lock.json
deleted file mode 100644
index 5452afe..0000000
--- a/package-lock.json
+++ /dev/null
@@ -1,124 +0,0 @@
-{
-  "name": "discord-clone",
-  "lockfileVersion": 3,
-  "requires": true,
-  "packages": {
-    "": {
-      "dependencies": {
-        "axios": "^1.7.2",
-        "uuid": "^10.0.0"
-      },
-      "devDependencies": {
-        "@types/uuid": "^10.0.0"
-      }
-    },
-    "node_modules/@types/uuid": {
-      "version": "10.0.0",
-      "resolved": "https://registry.npmjs.org/@types/uuid/-/uuid-10.0.0.tgz",
-      "integrity": "sha512-7gqG38EyHgyP1S+7+xomFtL+ZNHcKv6DwNaCZmJmo1vgMugyF3TCnXVg4t1uk89mLNwnLtnY3TpOpCOyp1/xHQ==",
-      "dev": true
-    },
-    "node_modules/asynckit": {
-      "version": "0.4.0",
-      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
-      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
-    },
-    "node_modules/axios": {
-      "version": "1.7.2",
-      "resolved": "https://registry.npmjs.org/axios/-/axios-1.7.2.tgz",
-      "integrity": "sha512-2A8QhOMrbomlDuiLeK9XibIBzuHeRcqqNOHp0Cyp5EoJ1IFDh+XZH3A6BkXtv0K4gFGCI0Y4BM7B1wOEi0Rmgw==",
-      "dependencies": {
-        "follow-redirects": "^1.15.6",
-        "form-data": "^4.0.0",
-        "proxy-from-env": "^1.1.0"
-      }
-    },
-    "node_modules/combined-stream": {
-      "version": "1.0.8",
-      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
-      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
-      "dependencies": {
-        "delayed-stream": "~1.0.0"
-      },
-      "engines": {
-        "node": ">= 0.8"
-      }
-    },
-    "node_modules/delayed-stream": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
-      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
-      "engines": {
-        "node": ">=0.4.0"
-      }
-    },
-    "node_modules/follow-redirects": {
-      "version": "1.15.6",
-      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.6.tgz",
-      "integrity": "sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==",
-      "funding": [
-        {
-          "type": "individual",
-          "url": "https://github.com/sponsors/RubenVerborgh"
-        }
-      ],
-      "engines": {
-        "node": ">=4.0"
-      },
-      "peerDependenciesMeta": {
-        "debug": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/form-data": {
-      "version": "4.0.0",
-      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz",
-      "integrity": "sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
-      "dependencies": {
-        "asynckit": "^0.4.0",
-        "combined-stream": "^1.0.8",
-        "mime-types": "^2.1.12"
-      },
-      "engines": {
-        "node": ">= 6"
-      }
-    },
-    "node_modules/mime-db": {
-      "version": "1.52.0",
-      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
-      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
-      "engines": {
-        "node": ">= 0.6"
-      }
-    },
-    "node_modules/mime-types": {
-      "version": "2.1.35",
-      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
-      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
-      "dependencies": {
-        "mime-db": "1.52.0"
-      },
-      "engines": {
-        "node": ">= 0.6"
-      }
-    },
-    "node_modules/proxy-from-env": {
-      "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
-      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
-    },
-    "node_modules/uuid": {
-      "version": "10.0.0",
-      "resolved": "https://registry.npmjs.org/uuid/-/uuid-10.0.0.tgz",
-      "integrity": "sha512-8XkAphELsDnEGrDxUOHB3RGvXz6TeuYSGEZBOjtTtPm2lwhGBjLgOzLHB63IUWfBpNucQjND6d3AOudO+H3RWQ==",
-      "funding": [
-        "https://github.com/sponsors/broofa",
-        "https://github.com/sponsors/ctavan"
-      ],
-      "bin": {
-        "uuid": "dist/bin/uuid"
-      }
-    }
-  }
-}
diff --git a/package.json b/package.json
deleted file mode 100644
index 002c167..0000000
--- a/package.json
+++ /dev/null
@@ -1,9 +0,0 @@
-{
-  "dependencies": {
-    "axios": "^1.7.2",
-    "uuid": "^10.0.0"
-  },
-  "devDependencies": {
-    "@types/uuid": "^10.0.0"
-  }
-}
